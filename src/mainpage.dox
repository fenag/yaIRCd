/** @mainpage yaIRCd Documentation

@section intro_sec Introduction
<p>Welcome to yaIRCd, Yet Another IRC Daemon.</p>
<p>If you're just a regular user wanting to install and configure yaIRCd, this page should be enough for you. It goes through the configuration and installation process.</p>
<p>If you are a developer, though, you will have to invest some time and sweat to read the documentation and get used to the code base. Please refer to the final sections in this page to learn how to contribute.</p>

@section install_sec Installation
	xpto
	@subsection step1 Step 1: Opening the box
		lalala

@section contrib Contributing
	<p>This document describes yaIRCd's code architecture. It is intended to help new developers getting up to speed on the existing code base.</p>
	<p>It is assumed that RFC 1459, describing the IRC protocol, has been read. Please refer to doc/rfc.html to check it. Developers are also recommended to read about libev, since that's what is used to implement timeouts, callback mechanisms, and other important concepts throughout the code. You can check libev's documentation in doc/libev.htm - to get up to speed, give a look at the section "WHAT TO READ WHEN IN A HURRY".</p>
	<p>
	A strong effort has been made to maintain the code valgrind clean. This means that at every moment, code in the repository is required to pass checks performed by valgrind without any error or warning.
	The only exception is for the error "Address is just below the stack ptr" in ev_run(), which has been reported as a bug in valgrind.
	</p>
	<p>Some basic knowledge of how to use Git is required to work on the code base and submitting patches.</p>
	<p>
	Every code submitted must comply with the following rules:
		<ul>
			<li>Compiles without warnings when using -Wall under gcc</li>
			<li>Is documented with doxygen, including static functions</li>
			<li>Passes valgrind checks without any error or warning</li>
		</ul>
	</p>
*/
